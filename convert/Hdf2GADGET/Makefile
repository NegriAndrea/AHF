# Compiler flags for ALPHA
#F90FLAGS = -assume big_endian -C 
#F77FLAGS = -assume big_endian -extend_source -C 

# Compiler flags for SUN 
#F77FLAGS = -e -O5 -native  -fnonstd -xld -C -fast
#F90FLAGS = -e -O5 -native  -fnonstd -C -fast

# Compiler flags for DECSTATION
#F77 = -extend_source -assume big_endian  -O3

# Compiler flags for Silicon Graphics Power Challenge
# R4400
#F77 = -extend_source -O  -C
# R10000
#F77 = -extend_source  -64 -r10000 -O3 #-C -g -d_lines
#-static -OPT:roundoff=3:IEEE_arith=3 -lfastm

#Compiler options suitable fo cdml
#FC = pgf90
#F90FLAGS = -C -Mextend -byteswapio -fast -Mbounds -Ktrap=fp
#F77FLAGS = -C -Mextend -byteswapio -fast -Mbounds -Ktrap=fp

#for JUMP
#FC = xlf90_r
#F90FLAGS = -bmaxdata:0x80000000 -qsmp=omp #-convert big_endian
#F77FLAGS = -bmaxdata:0x80000000 -qsmp=omp #-convert big_endian


include make.COSMA4
OPTIM = -O2 -Mvect
F90FLAGS = $(DEBUG) #-convert big_endian -O #-fast
FFLAGS = $(FDEBUG)
CFLAGS = $(CDEBUG)


.SUFFIXES:
.SUFFIXES:  .exe .o .for .f .f90

.for.o:
	$(FC) -c $< -o $*.o $(F77FLAGS)  

.f.o:
	$(FC) -c $< -o $*.o $(F77FLAGS)  

.o.exe:
	$(FC) $< -o $*.exe $(F90FLAGS)   

.f90.o:
	$(FC) -c $< -o $*.o $(F90FLAGS)
clean:
	rm -rf *.o *.mod *exe

Hdf2GADGET.exe: Hdf2GADGET_io.o Hdf2GADGET_subroutines.o Hdf2GADGET.o
	$(FC) $(INC) $(FFLAGS) $(OPTIONS) $(HDF5_MOD) $(RLIB) $(LIB) Hdf2GADGET_io.o Hdf2GADGET_subroutines.o Hdf2GADGET.o -o Hdf2GADGET.exe $(F90FLAGS)


